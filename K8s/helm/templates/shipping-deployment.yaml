apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipping
  labels:
    service: shipping
spec:
  replicas: 1
  selector:
    matchLabels:
      service: shipping
  template:
    metadata:
      labels:
        service: shipping
    spec:
      {{ if .Values.psp.enabled }}
      serviceAccountName: robot-shop
      {{ end }}
      imagePullSecrets:
        - name: docker-hub
      containers:
      - command:
        - java
        - -Xmn256m
        - -Xmx768m
        - -javaagent:opentelemetry-javaagent.jar
        - -Dotel.metrics.exporter=none
        - -Dotel.exporter.otlp.traces.endpoint=http://otel-collector:4317
        - -jar
        - shipping.jar
        name: shipping
        image: {{ .Values.image.repo }}/robot-shop-rs-shipping:{{ .Values.image.shippingVersion }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          {{- if .Values.shipping.failureHour }}
          - name: FAILURE_HOUR
            value: {{ .Values.shipping.failureHour | quote }}
          {{- end }}
          {{- if .Values.shipping.failureFromMinute }}
          - name: FAILURE_FROM_MINUTE
            value: {{ .Values.shipping.failureFromMinute | quote }}
          {{- end }}
          {{- if .Values.shipping.failureTillMinute }}
          - name: FAILURE_TILL_MINUTE
            value: {{ .Values.shipping.failureTillMinute | quote }}
          {{- end }}
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: "service.name=shipping,service.namespace=robot-shop,deployment.environment=prod"
        ports:
        - name: http
          containerPort: 8080
        # it's Java it needs lots of memory
        resources:
          limits:
            memory: 2000Mi
          requests:
            cpu: 500m
            memory: 1000Mi
        # Shipping depends on MySQL which takes a long time to start
        # Springboot is not too quick on startup either
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 60
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
      restartPolicy: Always
